import{_ as e,c as o,o as s,a}from"./app.e634c48a.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"准备工作","slug":"准备工作","link":"#准备工作","children":[]}],"relativePath":"front-end-utils/lodash/start.md"}'),l={name:"front-end-utils/lodash/start.md"},c=a(`<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>本次我们来分析下<a href="https://github.com/lodash/lodash/" target="_blank" rel="noreferrer">lodash</a>库的主线流程源码，主要理清大体流程，具体的分支和相关的函数方法，可以在用到的时候去查看。</p></div><h3 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-hidden="true">#</a></h3><p>本文分析的是打包之后生成代码<code>lodash-es</code>，官方仓库的代码是拆分后的代码，并不是打包后生成的代码，我们可以通过<code>npm</code>直接下载<code>lodash-es</code>直接获取源码，也可以通过<code>lodash-cli</code>脚手架来生成打包对应格式及版本的代码。流程如下:(以MacOS为例)</p><ul><li>全局安装<code>lodash-cli</code></li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lodash-cli</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>下载完之后，我们可以通过<code>npm config get prefix</code>命令获取全局npm目录，然后在该目录下的<code>lib/node_modules</code>里找到<code>lodash-cli</code></li><li>用代码编辑器打开该项目，默认情况在<code>package.json</code>中安装的<code>lodash</code>版本是<code>4.17.5</code>，如果需要生成对应的lodash包修改版本后,重新安装依赖包</li><li><code>lodash modularize exports=es -o ./</code>执行该命令就可以在当前目录下生成<code>ESModule</code>模块的<code>lodash</code>，你也可以自行定义生成文件的目录，<a href="https://lodash.com/custom-builds" target="_blank" rel="noreferrer">参考链接</a></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>代码打包生成的功能代码在<code>bin/lodash</code>文件中，其中打包的<code>lodash</code>就依赖于<code>package.json</code>中<code>lodash</code>的版本</p></div>`,7),d=[c];function t(n,i,r,p,h,u){return s(),o("div",null,d)}const b=e(l,[["render",t]]);export{m as __pageData,b as default};
